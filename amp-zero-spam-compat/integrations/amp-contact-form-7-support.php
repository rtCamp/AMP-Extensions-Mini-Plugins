<?php
/**
 * Add Contact Form 7 Compatibility.
 *
 * @package   AMP_WP_Zero_Spam_Compat
 * @author    Weston Ruter, Google
 * @license   GPL-2.0-or-later
 * @copyright 2019 Google Inc.
 *
 * @wordpress-plugin
 * Description: Ensure that success/error messages are displayed when submitting forms provided by Contact Form 7 on AMP pages generated by the <a href="https://wordpress.org/plugins/amp/">official AMP plugin</a>.
 * Plugin URI: https://gist.github.com/westonruter/3501016b0d44af45d878067b1856e023
 * Version: 0.2.0
 * Author: Weston Ruter, Google
 * Author URI: https://weston.ruter.net/
 * License: GNU General Public License v2 (or later)
 * License URI: http://www.gnu.org/licenses/gpl-2.0.html
 * Gist Plugin URI: https://gist.github.com/westonruter/3501016b0d44af45d878067b1856e023
 */

namespace AMP_Contact_Form_7_Compat;

/**
 * Determine whether the current page is AMP.
 *
 * @return bool Whether it is an AMP endpoint.
 */
function is_amp_endpoint() {
	return function_exists( 'is_amp_endpoint' ) && \is_amp_endpoint();
}

/**
 * Dequeue scripts on AMP responses.
 *
 * @see \wpcf7_do_enqueue_scripts()
 */
function dequeue_scripts_on_amp_responses() {
	if ( is_amp_endpoint() ) {
		wp_dequeue_script( 'contact-form-7' );
	}
}
add_action( 'wp_enqueue_scripts', __NAMESPACE__ . '\dequeue_scripts_on_amp_responses', 20 );

/**
 * Filter whether novalidate attribute is used on the form.
 *
 * @param bool $novalidate Use form novalidate.
 * @return bool Whether to use novalidate.
 */
function filter_form_novalidate( $novalidate ) {
	if ( is_amp_endpoint() ) {
		$novalidate = false;
	}
	return $novalidate;
}
add_filter( 'wpcf7_form_novalidate', __NAMESPACE__ . '\filter_form_novalidate' );

/**
 * Replace aria-required="true" with required on AMP pages, since client-side jQuery validation will not work in AMP.
 *
 * @param string $elements Form elements.
 * @return string Filtered form elements.
 */
function filter_form_elements_for_required( $elements ) {
	if ( is_amp_endpoint() ) {
		$elements = str_replace( 'aria-required="true"', 'required', $elements );
	}
	return $elements;
}
add_filter( 'wpcf7_form_elements', __NAMESPACE__ . '\filter_form_elements_for_required' );

/**
 * Handle submission.
 *
 * @param \WPCF7_ContactForm $contact_form Contact Form.
 * @param array              $result       Result.
 */
function handle_submit( $contact_form, $result ) {
	unset( $contact_form );

	if ( ! function_exists( 'wp_is_json_request' ) ) {
		_doing_it_wrong( __FUNCTION__, 'Please update to WordPress 5.0', '0.1' );
		return;
	}

	if ( wp_is_json_request() ) {
		$success = 'mail_sent' === $result['status'];

		$response = array(
			'message' => $result['message'],
		);

		// @todo Add full support for verify-xhr.
		if ( ! empty( $result['invalid_fields'] ) ) {
			foreach ( $result['invalid_fields'] as $name => $invalid_field ) {
				$response['verifyErrors'][] = array(
					'name'    => $name,
					'message' => $invalid_field['reason'],
				);
			}
		}

		wp_send_json(
			$response,
			$success ? 200 : 400
		);
	}
}

add_action( 'wpcf7_submit', __NAMESPACE__ . '\handle_submit', 10, 2 );
